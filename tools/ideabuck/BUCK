load("//tools/build_rules:java_rules.bzl", "java_test")

# =========================================================
# 'src' directory layout:
# =========================================================

# Classes considered to be stable for public use
API_SOURCE_FILES = glob([
    "src/com/facebook/buck/intellij/ideabuck/api/**/*.java",
])

# Implementation classes that should not be used by other plugins.
PLUGIN_SOURCE_FILES = glob(
    ["src/**/*.java"],
    exclude = API_SOURCE_FILES,
)

# ================================================================
# Classes considered to be part of ideabuck's public/reusable API.
# Other IntelliJ plugins that wish to declare a dependency on
# ideabuck to reference its classes should limit themselves to
# classes defined here.
#
# Note that the API does not have dependencies on generated
# grammar artifacts.  This is intentional to enforce that the
# public API does not leak grammar implementation details.
# ================================================================
java_library(
    name = "api",
    srcs = API_SOURCE_FILES,
    provided_deps = [
        "//third-party/java/intellij:intellij-plugin-sdk",
    ],
    source = "1.8",
    target = "1.8",
    visibility = [
        "PUBLIC",
    ],
)

java_library(
    name = "ideabuck-lib",
    srcs = PLUGIN_SOURCE_FILES,
    exported_deps = [
        ":api",
    ],
    provided_deps = [
        "//third-party/java/intellij:intellij-plugin-sdk",
    ],
    source = "1.8",
    target = "1.8",
    visibility = [
        "//tools/ideabuck/...",
    ],
    deps = [
        "//src/com/facebook/buck/event/external:external_lib",
        "//third-party/java/android:ddmlib",
        "//third-party/java/gson:gson",
        "//third-party/java/ini4j:ini4j",
        "//third-party/java/jackson:jackson-annotations",
        "//third-party/java/jackson:jackson-databind",
        "//third-party/java/jackson:jackson-datatype-guava",
        "//third-party/java/jackson:jackson-mrbean",
        "//third-party/java/jetty:jetty",
        "//tools/psi-grammar:grammar",
    ],
)

java_library(
    name = "resources",
    srcs = [],
    resources = glob(
        [
            "**/*.png",
            "**/*.xml",
        ],
        exclude = ["resources/META-INF/**"],
    ),
    resources_root = "resources/",
    visibility = [
        "PUBLIC",
    ],
)

java_binary(
    name = "ideabuck",
    meta_inf_directory = "resources/META-INF",
    deps = [
        ":ideabuck-lib",
        ":resources",
    ],
)

